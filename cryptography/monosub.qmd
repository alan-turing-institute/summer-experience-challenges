---
title: "Monoalphabetic ciphers"
format: html
---

## Introduction

Clearly, the Caesar cipher is not very secure.
It's probably enough if you were sending an unimaginative message to a friend, but for anything mildly important, you probably want to crank up the security a little bit!

The Caesar cipher is a very simple example of a *monoalphabetic substitution cipher*: one where each alphabet is replaced with another one.
This means that there's a *one-to-one mapping* between pairs of alphabet in the plain and cipher text.
The problem with the Caesar cipher is that the replacement follows a very simple pattern, so once you know one mapping, the rest can be figured out right away.

We can go one step further and use a cipher where the mapping is completely random.
For example, A can be mapped to B, but B can be mapped to Q, and C to I, and so on.

> **Question:** How many possible encryptions are there? Would a brute-force attack on such a cipher be sensible?

TODO: JavaScript block.

## Frequency analysis

Although we realistically cannot use brute force, there is a much more clever way to crack such a code.
It relies on the fact that certain letters of the alphabet are much more common than others in typical English text.

Try pasting some text into the box below (or clicking the samples), and observe the frequency distribution of the letters in the plot that appears:

<div id="buttons" style="display: flex; justify-content: center">
<input type="button" id="fillpnp" value="Pride and Prejudice" class="italic" />
<input type="button" id="fillbm" value="Bee Movie" class="italic" />
<input type="button" id="filludhr" value="Universal Declaration of Human Rights" class="italic" />
</div>
<div id="container" style="display: flex">
<div id="content" style="width: 40%">
<textarea rows=10 placeholder="Paste text to analyse here..." class="fullwidth is_code" id="text_analysis" spellcheck=false></textarea>
</div>
<div id="plot" style="width: 60%"></div>
</div>
<script type="module">
{{< include monosub_freq.js >}}
</script>


> **Question:** Try a few different text sources. What are the most and least common letters? Can you think of any reasons why this distribution might systematically vary from text to text?
>
> If you speak a foreign language, try analysing some text in that language to observe how the distribution might change. (Sadly, the box above ignores all accented characters! The schemes we're discussing today can be adapted to work on non-English letters, but today we'll focus only on the 26 English alphabet.)

In English, the most common letter is by far 'E'.
If we perform the same analysis on the cipher text, and find that 'R' is the most common letter, then it's likely that 'R' corresponds to 'E' in the plain text.

Once we have a match, we can fill it in and try to solve the rest in an iterative manner.

TODO: JavaScript block.
