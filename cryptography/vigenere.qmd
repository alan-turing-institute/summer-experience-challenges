# Vigenère cipher

## Introduction

We can combine the *Caesar cipher* and the *Monoalphabetic substitution cipher* to create a more secure cipher called a "Vigenere cipher" (named after the 16th-century French diplomat Blaise de Vigenere).

In this cipher, we define the key as a word or phrase that is repeated as many times as necessary to cover the length of the message.  Each letter in this key is then used as the key for a Caesar cipher to encrypt the corresponding letter in the message.

For example, if the message is "Cryptography is fun" and the key is "SECRETKEY", we would write the message and the repeated key together:
```
CRYPTOGRAPHYISFUN
SECRETKEYSECRETKE
```
Since the first letter of the key is "S", which is the 19th letter of the alphabet, we shift the first letter of our message ("C") by 18 (since we start counting with "A" as zero, meaning "no shift"), to give us "U".

> **Exercise:** Using pen and paper, go ahead and encrypt the rest of that message.

<div id="vig-encrypt" style="display: flex; justify-content: center">
<div id="buttons" style="margin: auto; display: flex; justify-content: center">
<input type="button" id="revealButton" class="italic" value="Reveal answer" />
</div>
</div>
<br>
<div id="vig-answer" style="display: none; justify-content: center">
UVAGXHQVYHLAZWYER
</div>
<script>
    var button = document.getElementById("revealButton");
    var answerElement = document.getElementById("vig-answer");
    var answerVisible = false;
    button.addEventListener("click", function() {
      if (answerVisible) {
      	 answerElement.style.display = "none";
	 button.value = "Reveal answer";
      } else {
      	answerElement.style.display = "flex";
	button.value = "Hide answer";
      }
      answerVisible = !answerVisible;
    });
</script>

## Finding the key length

Luckily, the Vigenère cipher still contains a point of weakness that we can use to attack it: the *periodicity* of the key, or in other words, the fact that it repeats itself every $n$ characters.

This means that, if the key length is 3, then the 1st, 4th, 7th, ... characters are encoded in the same way, and we can tackle it just like we did for the simple ciphers seen already.

But, to do this, we first need to know the key length!

To do this, we need to understand another fundamental property of English text: the *index of coincidence* (IoC).
If we have a piece of text and randomly pull two letters out of it, the IoC tells us how likely it is that these two letters are the same.

Mathematically, we can define the IoC as:

$$\text{IoC} = 26 \cdot \frac{n_\text{A}(n_\text{A} - 1) + n_\text{B}(n_\text{B} - 1) + \cdots + n_\text{Z}(n_\text{Z} - 1)}{N(N - 1)},$$

where $n_i$ is the number of times the letter $i$ appears in the text, and $N$ is the length of the text.

> **Question:** Show that if all letters have the same probability of occurring, then the IoC is equal to 1. (Assume that the text is long enough, such that the $n_i$'s are much larger than 1.)

Because letters are not uniformly distributed in English (recall that 'E's were particularly common), this quantity is not equal to 1 for typical English texts.

Have a play around with this plot, and find out what the IoC is for some typical text.
The same samples as before are included:

<div id="buttons" style="margin: auto; display: flex; justify-content: center">
Samples:
<input type="button" id="fillpnp" value="Pride and Prejudice" class="italic" />
<input type="button" id="fillbm" value="Bee Movie" class="italic" />
<input type="button" id="filludhr" value="Universal Declaration of Human Rights" class="italic" />
</div>
<div id="container" style="display: flex">
<div id="content" style="width: 40%">
<textarea rows=10 placeholder="Paste text to analyse here..." class="fullwidth is_code" id="text_analysis" spellcheck=false></textarea>
</div>
<div id="plot" style="width: 60%"></div>
</div>
<script type="module">
{{< include samples.js >}}
{{< include ioc.js >}}
</script>




## Aside: One-time pads - the unbreakable cipher

Since the way that we break the Vigenere cipher depends on the repetition of the key, it follows that if the key is (at least) as long as the message, we wouldn't be able to crack the cipher this way.   In fact, these so-called "one-time pads", where the key is a long sequence of randomly generated letters, are thought to be unbreakable (as long as the sequence is truly random, and is not re-used - hence the name).   These were used for some of the most secret communications in WWII.   However, of course, we still have the problem of how to securely share the key between the sender and the recipient!